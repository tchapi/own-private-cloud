# Multistage build to reduce image size and increase security
FROM node:18-buster-slim AS build
# From https://hub.docker.com/_/node

LABEL maintainer="tchap@tchap.me"

ARG version

# Install requirements to clone repository and install deps
RUN apt-get update && DEBIAN_FRONTEND=noninteractive apt-get install -yq \
    git \
    curl \
    unzip \
    && apt-get clean && rm -rf /var/lib/apt/lists/*

# Download release, see https://github.com/xwiki-labs/cryptpad/releases
WORKDIR /tmp
RUN curl --silent -o cryptpad.tar.gz -L https://github.com/xwiki-labs/cryptpad/archive/${version}.tar.gz \
 && tar xvzf cryptpad.tar.gz \
 && mv -f cryptpad-${version} /cryptpad \
 && rm cryptpad.tar.gz

WORKDIR /cryptpad
# Install dependencies
RUN npm install --production \
   && npm run install:components

# Create actual cryptpad image
FROM node:18-buster-slim

# Install requirements to clone repository and install deps
RUN apt-get update && DEBIAN_FRONTEND=noninteractive apt-get install -yq \
    curl \
    && apt-get clean && rm -rf /var/lib/apt/lists/*

# Create user and group for cryptpad so it does not run as root
RUN groupadd cryptpad -g 4001
RUN useradd cryptpad -u 4001 -g 4001 -d /cryptpad

# Copy cryptpad with installed modules
COPY --from=build --chown=cryptpad /cryptpad /cryptpad
USER cryptpad

# Set workdir to cryptpad
WORKDIR /cryptpad
# Create directories
RUN mkdir -p customize data data/blob data/block data/datastore

# Configuration
COPY configurations/cryptpad/application_config.js customize/application_config.js
COPY configurations/cryptpad/config.js config/config.js

# Volumes for data persistence
VOLUME /cryptpad/data

# Ports
EXPOSE 3000 3001

# Run cryptpad on startup
CMD ["server.js"]
